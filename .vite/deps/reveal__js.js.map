{
  "version": 3,
  "sources": ["../../node_modules/reveal.js/js/utils/util.js", "../../node_modules/reveal.js/js/utils/device.js", "../../node_modules/reveal.js/node_modules/fitty/dist/fitty.module.js", "../../node_modules/reveal.js/js/controllers/slidecontent.js", "../../node_modules/reveal.js/js/utils/constants.js", "../../node_modules/reveal.js/js/controllers/slidenumber.js", "../../node_modules/reveal.js/js/controllers/jumptoslide.js", "../../node_modules/reveal.js/js/utils/color.js", "../../node_modules/reveal.js/js/controllers/backgrounds.js", "../../node_modules/reveal.js/js/controllers/autoanimate.js", "../../node_modules/reveal.js/js/controllers/scrollview.js", "../../node_modules/reveal.js/js/controllers/printview.js", "../../node_modules/reveal.js/js/controllers/fragments.js", "../../node_modules/reveal.js/js/controllers/overview.js", "../../node_modules/reveal.js/js/controllers/keyboard.js", "../../node_modules/reveal.js/js/controllers/location.js", "../../node_modules/reveal.js/js/controllers/controls.js", "../../node_modules/reveal.js/js/controllers/progress.js", "../../node_modules/reveal.js/js/controllers/pointer.js", "../../node_modules/reveal.js/js/utils/loader.js", "../../node_modules/reveal.js/js/controllers/plugins.js", "../../node_modules/reveal.js/js/controllers/overlay.js", "../../node_modules/reveal.js/js/controllers/touch.js", "../../node_modules/reveal.js/js/controllers/focus.js", "../../node_modules/reveal.js/js/controllers/notes.js", "../../node_modules/reveal.js/js/components/playback.js", "../../node_modules/reveal.js/js/config.js", "../../node_modules/reveal.js/js/reveal.js", "../../node_modules/reveal.js/js/index.js"],
  "sourcesContent": ["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}", "const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );", "/**\n * fitty v2.3.7 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){e.cancelAnimationFrame(l),l=e.requestAnimationFrame((function(){return s(a.filter((function(e){return e.dirty&&e.active})))}))}:function(){},c=function(e){return function(){a.forEach((function(t){return t.dirty=e})),u()}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(){e.dirty=t,e.active&&u()}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n", "import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted || this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element ) {\n\n\t\t\tconst isSpeakerNotesWindow = this.Reveal.isSpeakerNotes();\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// In the speaker view we only auto-play muted media\n\t\t\t\t\tif( isSpeakerNotesWindow && !el.muted ) return;\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Don't play iframe content in the speaker view since we can't\n\t\t\t// guarantee that it's muted\n\t\t\tif( !isSpeakerNotesWindow ) {\n\n\t\t\t\t// Normal iframes\n\t\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t\t} );\n\n\t\t\t\t// Lazy loading iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\t// Don't restart if media is already playing\n\t\t\tif( event.target.paused || event.target.ended ) {\n\t\t\t\tevent.target.currentTime = 0;\n\t\t\t\tevent.target.play();\n\t\t\t}\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n", "\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';", "import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear number\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}", "/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}", "import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = config.rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = config.rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// The previous background may refer to a DOM element that has\n\t\t// been removed after a presentation is synced & bgs are recreated\n\t\tif( this.previousBackground && !this.previousBackground.closest( 'body' ) ) {\n\t\t\tthis.previousBackground = null;\n\t\t}\n\n\t\tif( currentBackground && this.previousBackground ) {\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground.getAttribute( 'data-background-hash' );\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t\t\t// If multiple slides have the same background video, carry\n\t\t\t\t// the <video> element forward so that it plays continuously\n\t\t\t\t// across multiple slides\n\t\t\t\tconst currentVideo = currentBackground.querySelector( 'video' );\n\t\t\t\tconst previousVideo = this.previousBackground.querySelector( 'video' );\n\n\t\t\t\tif( currentVideo && previousVideo ) {\n\n\t\t\t\t\tconst currentVideoParent = currentVideo.parentNode;\n\t\t\t\t\tconst previousVideoParent = previousVideo.parentNode;\n\n\t\t\t\t\t// Swap the two videos\n\t\t\t\t\tpreviousVideoParent.appendChild( currentVideo );\n\t\t\t\t\tcurrentVideoParent.appendChild( previousVideo );\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\tconst backgroundChanged = currentBackground !== this.previousBackground;\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( backgroundChanged && this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( backgroundChanged && currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 10 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n", "import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that;\n\t\t// 1. Both slides exist.\n\t\t// 2. Both slides are auto-animate targets with the same\n\t\t//    data-auto-animate-id value (including null if absent on both).\n\t\t// 3. data-auto-animate-restart isn't set on the physically latter\n\t\t//    slide (independent of slide direction).\n\t\tif( fromSlide && toSlide && fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.textContent.trim();\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n", "import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t\t// Ensure the last trigger extends to the end of the page, otherwise\n\t\t// rounding errors can cause the last trigger to end at 0.999999...\n\t\tthis.slideTriggers[this.slideTriggers.length - 1].range[1] = 1;\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}", "import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif( changedFragments.hidden.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif( changedFragments.shown.length ) {\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'fragmentshown',\n\t\t\t\tdata: {\n\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}", "import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}", "import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 63, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isOverlayOpen() && ![\"Escape\", \"f\", \"c\", \"b\", \".\"].includes(event.key) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// C\n\t\t\telse if( keyCode === 67 && this.Reveal.isOverlayOpen() ) {\n\t\t\t\tthis.Reveal.closeOverlay();\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( ( keyCode === 63 || keyCode === 191 ) && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n", "/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}", "import { queryAll, enterFullscreen } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n * - .enter-fullscreen\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\t\tthis.onEnterFullscreen = this.onEnterFullscreen.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\t\tthis.controlsFullscreen = queryAll( revealElement, '.enter-fullscreen' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = (\n\t\t\tconfig.controls &&\n\t\t\t(config.controls !== 'speaker-only' || this.Reveal.isSpeakerNotes())\n\t\t) ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.addEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t\tthis.controlsFullscreen.forEach( el => el.removeEventListener( eventName, this.onEnterFullscreen, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\tconst isVerticalStack = this.Reveal.isVerticalSlide( currentSlide );\n\t\t\tconst hasVerticalSiblings = isVerticalStack &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentSlide.parentElement.querySelectorAll( ':scope > section' ).length > 1;\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( isVerticalStack && hasVerticalSiblings ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\tonEnterFullscreen( event ) {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst viewport = this.Reveal.getViewportElement();\n\n\t\tenterFullscreen( config.embedded ? viewport : viewport.parentElement );\n\n\t}\n\n}", "/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n", "/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}", "import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n", "/**\n * Handles the display of reveal.js' overlay elements used\n * to preview iframes, images & videos.\n */\nexport default class Overlay {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onSlidesClicked = this.onSlidesClicked.bind( this );\n\n\t\tthis.iframeTriggerSelector = null;\n\t\tthis.mediaTriggerSelector = '[data-preview-image], [data-preview-video]';\n\n\t\tthis.stateProps = ['previewIframe', 'previewImage', 'previewVideo', 'previewFit'];\n\t\tthis.state = {};\n\n\t}\n\n\tupdate() {\n\n\t\t// Enable link previews globally\n\t\tif( this.Reveal.getConfig().previewLinks ) {\n\t\t\tthis.iframeTriggerSelector = 'a[href]:not([data-preview-link=false]), [data-preview-link]:not(a):not([data-preview-link=false])';\n\t\t}\n\t\t// Enable link previews for individual elements\n\t\telse {\n\t\t\tthis.iframeTriggerSelector = '[data-preview-link]:not([data-preview-link=false])';\n\t\t}\n\n\t\tconst hasLinkPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.iframeTriggerSelector ).length > 0;\n\t\tconst hasMediaPreviews = this.Reveal.getSlidesElement().querySelectorAll( this.mediaTriggerSelector ).length > 0;\n\n\t\t// Only add the listener when there are previewable elements in the slides\n\t\tif( hasLinkPreviews || hasMediaPreviews ) {\n\t\t\tthis.Reveal.getSlidesElement().addEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getSlidesElement().removeEventListener( 'click', this.onSlidesClicked, false );\n\t\t}\n\n\t}\n\n\tcreateOverlay( className ) {\n\n\t\tthis.dom = document.createElement( 'div' );\n\t\tthis.dom.classList.add( 'r-overlay' );\n\t\tthis.dom.classList.add( className );\n\n\t\tthis.viewport = document.createElement( 'div' );\n\t\tthis.viewport.classList.add( 'r-overlay-viewport' );\n\n\t\tthis.dom.appendChild( this.viewport );\n\t\tthis.Reveal.getRevealElement().appendChild( this.dom );\n\n\t}\n\n\t/**\n\t * Opens a lightbox that previews the target URL.\n\t *\n\t * @param {string} url - url for lightbox iframe src\n\t */\n\tpreviewIframe( url ) {\n\n\t\tthis.close();\n\n\t\tthis.state = { previewIframe: url };\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<a class=\"r-overlay-button r-overlay-external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\"><span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"r-overlay-content-inner\">\n\t\t\t\t\t<span class=\"r-overlay-error x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tthis.dom.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tthis.dom.querySelector( '.r-overlay-external' ).addEventListener( 'click', event => {\n\t\t\tthis.close();\n\t\t}, false );\n\n\t\tthis.Reveal.dispatchEvent({ type: 'previewiframe', data: { url } });\n\n\t}\n\n\t/**\n\t * Opens a lightbox window that provides a larger view of the\n\t * given image/video.\n\t *\n\t * @param {string} url - url to the image/video to preview\n\t * @param {image|video} mediaType\n\t * @param {string} [fitMode] - the fit mode to use for the preview\n\t */\n\tpreviewMedia( url, mediaType, fitMode ) {\n\n\t\tif( mediaType !== 'image' && mediaType !== 'video' ) {\n\t\t\tconsole.warn( 'Please specify a valid media type to preview (image|video)' );\n\t\t\treturn;\n\t\t}\n\n\t\tthis.close();\n\n\t\tfitMode = fitMode || 'scale-down';\n\n\t\tthis.createOverlay( 'r-overlay-preview' );\n\t\tthis.dom.dataset.state = 'loading';\n\t\tthis.dom.dataset.previewFit = fitMode;\n\n\t\tthis.viewport.innerHTML =\n\t\t\t`<header class=\"r-overlay-header\">\n\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t</header>\n\t\t\t<div class=\"r-overlay-spinner\"></div>\n\t\t\t<div class=\"r-overlay-content\"></div>`;\n\n\t\tconst contentElement = this.dom.querySelector( '.r-overlay-content' );\n\n\t\tif( mediaType === 'image' ) {\n\n\t\t\tthis.state = { previewImage: url, previewFit: fitMode }\n\n\t\t\tconst img = document.createElement( 'img', {} );\n\t\t\timg.src = url;\n\t\t\tcontentElement.appendChild( img );\n\n\t\t\timg.addEventListener( 'load', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\timg.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load image.</span>`\n\t\t\t}, false );\n\n\t\t\t// Hide image overlays when clicking outside the overlay\n\t\t\tthis.dom.style.cursor = 'zoom-out';\n\t\t\tthis.dom.addEventListener( 'click', ( event ) => {\n\t\t\t\tthis.close();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewimage', data: { url } });\n\n\t\t}\n\t\telse if( mediaType === 'video' ) {\n\n\t\t\tthis.state = { previewVideo: url, previewFit: fitMode }\n\n\t\t\tconst video = document.createElement( 'video' );\n\t\t\tvideo.autoplay = this.dom.dataset.previewAutoplay === 'false' ? false : true;\n\t\t\tvideo.controls = this.dom.dataset.previewControls === 'false' ? false : true;\n\t\t\tvideo.loop = this.dom.dataset.previewLoop === 'true' ? true : false;\n\t\t\tvideo.muted = this.dom.dataset.previewMuted === 'true' ? true : false;\n\t\t\tvideo.playsInline = true;\n\t\t\tvideo.src = url;\n\t\t\tcontentElement.appendChild( video );\n\n\t\t\tvideo.addEventListener( 'loadeddata', () => {\n\t\t\t\tthis.dom.dataset.state = 'loaded';\n\t\t\t}, false );\n\n\t\t\tvideo.addEventListener( 'error', () => {\n\t\t\t\tthis.dom.dataset.state = 'error';\n\t\t\t\tcontentElement.innerHTML =\n\t\t\t\t\t`<span class=\"r-overlay-error\">Unable to load video.</span>`;\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'previewvideo', data: { url } });\n\n\t\t}\n\t\telse {\n\t\t\tthrow new Error( 'Please specify a valid media type to preview' );\n\t\t}\n\n\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', ( event ) => {\n\t\t\tthis.close();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t}\n\n\tpreviewImage( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'image', fitMode );\n\n\t}\n\n\tpreviewVideo( url, fitMode ) {\n\n\t\tthis.previewMedia( url, 'video', fitMode );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\ttoggleHelp( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.showHelp() : this.close();\n\t\t}\n\t\telse {\n\t\t\tif( this.dom ) {\n\t\t\t\tthis.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.showHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tshowHelp() {\n\n\t\tif( this.Reveal.getConfig().help ) {\n\n\t\t\tthis.close();\n\n\t\t\tthis.createOverlay( 'r-overlay-help' );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p>';\n\n\t\t\tlet shortcuts = this.Reveal.keyboard.getShortcuts(),\n\t\t\t\tbindings = this.Reveal.keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tthis.viewport.innerHTML = `\n\t\t\t\t<header class=\"r-overlay-header\">\n\t\t\t\t\t<button class=\"r-overlay-button r-overlay-close\">Esc <span class=\"icon\"></span></button>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"r-overlay-content\">\n\t\t\t\t\t<div class=\"r-overlay-help-content\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tthis.dom.querySelector( '.r-overlay-close' ).addEventListener( 'click', event => {\n\t\t\t\tthis.close();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'showhelp' });\n\n\t\t}\n\n\t}\n\n\tisOpen() {\n\n\t\treturn !!this.dom;\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tclose() {\n\n\t\tif( this.dom ) {\n\t\t\tthis.dom.remove();\n\t\t\tthis.dom = null;\n\n\t\t\tthis.state = {};\n\n\t\t\tthis.Reveal.dispatchEvent({ type: 'closeoverlay' });\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetState() {\n\n\t\treturn this.state;\n\n\t}\n\n\tsetState( state ) {\n\n\t\t// Ignore the incoming state if none of the preview related\n\t\t// props have changed\n\t\tif( this.stateProps.every( key => this.state[ key ] === state[ key ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif( state.previewIframe ) {\n\t\t\tthis.previewIframe( state.previewIframe );\n\t\t}\n\t\telse if( state.previewImage ) {\n\t\t\tthis.previewImage( state.previewImage, state.previewFit );\n\t\t}\n\t\telse if( state.previewVideo ) {\n\t\t\tthis.previewVideo( state.previewVideo, state.previewFit );\n\t\t}\n\t\telse {\n\t\t\tthis.close();\n\t\t}\n\n\t}\n\n\tonSlidesClicked( event ) {\n\n\t\tconst target = event.target;\n\n\t\tconst linkTarget = target.closest( this.iframeTriggerSelector );\n\t\tconst mediaTarget = target.closest( this.mediaTriggerSelector );\n\n\t\t// Was an iframe lightbox trigger clicked?\n\t\tif( linkTarget ) {\n\t\t\tif( event.metaKey || event.shiftKey || event.altKey ) {\n\t\t\t\t// Let the browser handle meta keys naturally so users can cmd+click\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlet url = linkTarget.getAttribute( 'href' ) || linkTarget.getAttribute( 'data-preview-link' );\n\t\t\tif( url ) {\n\t\t\t\tthis.previewIframe( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\t\t// Was a media lightbox trigger clicked?\n\t\telse if( mediaTarget ) {\n\t\t\tif( mediaTarget.hasAttribute( 'data-preview-image' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewImage || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewImage( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if( mediaTarget.hasAttribute( 'data-preview-video' ) ) {\n\t\t\t\tlet url = mediaTarget.dataset.previewVideo || mediaTarget.getAttribute( 'src' );\n\t\t\t\tif( !url ) {\n\t\t\t\t\tlet source = mediaTarget.querySelector( 'source' );\n\t\t\t\t\tif( source ) {\n\t\t\t\t\t\turl = source.getAttribute( 'src' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif( url ) {\n\t\t\t\t\tthis.previewVideo( url, mediaTarget.dataset.previewFit );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.close();\n\n\t}\n\n}", "import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video[controls], audio[controls]' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}", "import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}", "/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}", "/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}", "/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows.\n\t// - true: Display controls on all screens\n\t// - false: Hide controls on all screens\n\t// - \"speaker-only\": Only display controls in the speaker view\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when returning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}", "import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport JumpToSlide from './controllers/jumptoslide.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport ScrollView from './controllers/scrollview.js'\nimport PrintView from './controllers/printview.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Overlay from './controllers/overlay.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '5.2.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if initialize() has been invoked for this reveal instance\n\t\tinitialized = false,\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tjumpToSlide = new JumpToSlide( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tscrollView = new ScrollView( Reveal ),\n\t\tprintView = new PrintView( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\toverlay = new Overlay( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\tif( initialized ) throw 'Reveal.js has already been initialized.';\n\n\t\tinitialized = true;\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\t// Legacy support for the ?print-pdf query\n\t\tif( /print-pdf/gi.test( window.location.search ) ) {\n\t\t\tconfig.view = 'print';\n\t\t}\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\t// Don't proceed if this instance has been destroyed\n\t\tif( initialized === false ) return;\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Activate the print/scroll view if configured\n\t\tactivateInitialView();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Activates the correct reveal.js view based on our config.\n\t * This is only invoked once during initialization.\n\t */\n\tfunction activateInitialView() {\n\n\t\tconst activatePrintView = config.view === 'print';\n\t\tconst activateScrollView = config.view === 'scroll' || config.view === 'reader';\n\n\t\tif( activatePrintView || activateScrollView ) {\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\tremoveEventListeners();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttouch.unbind();\n\t\t\t}\n\n\t\t\t// Avoid content flickering during layout\n\t\t\tdom.viewport.classList.add( 'loading-scroll-mode' );\n\n\t\t\tif( activatePrintView ) {\n\t\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t\t// measurements to be accurate\n\t\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\t\tprintView.activate();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.addEventListener( 'load', () => printView.activate() );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tscrollView.activate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tconst parent = slide.parentNode;\n\n\t\t\t\t// If this slide is part of a stack and that stack will be\n\t\t\t\t// empty after removing the hidden slide, remove the entire\n\t\t\t\t// stack\n\t\t\t\tif( parent.childElementCount === 1 && /section/i.test( parent.nodeName ) ) {\n\t\t\t\t\tparent.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.remove();\n\t\t\t\t}\n\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tjumpToSlide.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( !scrollView.isActive() && dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', typeof config.width === 'string' ? config.width :  config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', typeof config.height === 'string' ? config.height :  config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tinitialized = false;\n\n\t\t// There's nothing to destroy if this instance hasn't finished\n\t\t// initializing\n\t\tif( ready === false ) return;\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\toverlay.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\t\tjumpToSlide.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatches a slidechanged event.\n\t *\n\t * @param {string} origin Used to identify multiplex clients\n\t */\n\tfunction dispatchSlideChanged( origin ) {\n\n\t\tdispatchEvent({\n\t\t\ttype: 'slidechanged',\n\t\t\tdata: {\n\t\t\t\tindexh,\n\t\t\t\tindexv,\n\t\t\t\tpreviousSlide,\n\t\t\t\tcurrentSlide,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !printView.isActive() ) {\n\n\t\t\tconst viewportWidth = dom.viewport.offsetWidth;\n\t\t\tconst viewportHeight = dom.viewport.offsetHeight;\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = scrollView.isActive() ?\n\t\t\t\t\t\t\t getComputedSlideSize( viewportWidth, viewportHeight ) :\n\t\t\t\t\t\t\t getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1 or we're\n\t\t\t\t// in the scroll view\n\t\t\t\tif( scale === 1 || scrollView.isActive() ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( ( config.center || slide.classList.contains( 'center' ) ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcheckResponsiveScrollView();\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\t\t\tdom.viewport.style.setProperty( '--viewport-width', viewportWidth + 'px' );\n\t\t\tdom.viewport.style.setProperty( '--viewport-height', viewportHeight + 'px' );\n\n\t\t\tscrollView.layout();\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Responsively activates the scroll mode when we reach the configured\n\t * activation width.\n\t */\n\tfunction checkResponsiveScrollView() {\n\n\t\t// Only proceed if...\n\t\t// 1. The DOM is ready\n\t\t// 2. Layouts aren't disabled via config\n\t\t// 3. We're not currently printing\n\t\t// 4. There is a scrollActivationWidth set\n\t\t// 5. The deck isn't configured to always use the scroll view\n\t\tif(\n\t\t\tdom.wrapper &&\n\t\t\t!config.disableLayout &&\n\t\t\t!printView.isActive() &&\n\t\t\ttypeof config.scrollActivationWidth === 'number' &&\n\t\t\tconfig.view !== 'scroll'\n\t\t) {\n\t\t\tconst size = getComputedSlideSize();\n\n\t\t\tif( size.presentationWidth > 0 && size.presentationWidth <= config.scrollActivationWidth ) {\n\t\t\t\tif( !scrollView.isActive() ) {\n\t\t\t\t\tbackgrounds.create();\n\t\t\t\t\tscrollView.activate()\n\t\t\t\t};\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( scrollView.isActive() ) scrollView.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tlet width = config.width;\n\t\tlet height = config.height;\n\n\t\tif( config.disableLayout ) {\n\t\t\twidth = dom.slides.offsetWidth;\n\t\t\theight = dom.slides.offsetHeight;\n\t\t}\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: width,\n\t\t\theight: height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is a stack containing\n\t * vertical slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalStack( slide = currentSlide ) {\n\n\t\treturn slide.classList.contains( '.stack' ) || slide.querySelector( 'section' ) !== null;\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presentation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles visibility of the jump-to-slide UI.\n\t */\n\tfunction toggleJumpToSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? jumpToSlide.show() : jumpToSlide.hide();\n\t\t}\n\t\telse {\n\t\t\tjumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show();\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before the slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// If we're in scroll mode, we scroll the target slide into view\n\t\t// instead of running our standard slide transition\n\t\tif( scrollView.isActive() ) {\n\t\t\tconst scrollToSlide = scrollView.getSlideByIndices( h, v );\n\t\t\tif( scrollToSlide ) scrollView.scrollToSlide( scrollToSlide );\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Indicate when we're on a vertical slide\n\t\trevealElement.classList.toggle( 'is-vertical-slide', currentVerticalSlides.length > 1 );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\t\t\ttransition = 'running';\n\n\t\t\tautoAnimateTransition = shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexvBefore );\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( autoAnimateTransition ) {\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' )\n\t\t\t}\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchSlideChanged( origin );\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks whether or not an auto-animation should take place between\n\t * the two given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t * @param {number} indexhBefore\n\t * @param {number} indexvBefore\n\t *\n\t * @returns {boolean}\n\t */\n\tfunction shouldAutoAnimateBetween( fromSlide, toSlide, indexhBefore, indexvBefore ) {\n\n\t\treturn \tfromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' ) &&\n\t\t\t\tfromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) &&\n\t\t\t\t!( ( indexh > indexhBefore || indexv > indexvBefore ) ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' );\n\n\t}\n\n\t/**\n\t * Called anytime a new slide should be activated while in the scroll\n\t * view. The active slide is the page that occupies the most space in\n\t * the scrollable viewport.\n\t *\n\t * @param {number} pageIndex\n\t * @param {HTMLElement} slideElement\n\t */\n\tfunction setCurrentScrollPage( slideElement, h, v ) {\n\n\t\tlet indexhBefore = indexh || 0;\n\n\t\tindexh = h;\n\t\tindexv = v;\n\n\t\tconst slideChanged = currentSlide !== slideElement;\n\n\t\tpreviousSlide = currentSlide;\n\t\tcurrentSlide = slideElement;\n\n\t\tif( currentSlide && previousSlide ) {\n\t\t\tif( config.autoAnimate && shouldAutoAnimateBetween( previousSlide, currentSlide, indexhBefore, indexv ) ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\t\t}\n\n\t\t// Start or stop embedded content like videos and iframes\n\t\tif( slideChanged ) {\n\t\t\tif( previousSlide ) {\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\t\tslideContent.stopEmbeddedContent( previousSlide.slideBackgroundElement );\n\t\t\t}\n\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide.slideBackgroundElement );\n\t\t}\n\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tdispatchSlideChanged();\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tif( config.sortFragmentsOnSync === true ) {\n\t\t\tfragments.sortAll();\n\t\t}\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\toverlay.update();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = scrollView.isActive() || printView.isActive();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given container.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given container.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( printView.isActive() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// available if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\t// In scroll mode the original h/x index is stored on the slide\n\t\t\tif( scrollView.isActive() ) {\n\t\t\t\th = parseInt( slide.getAttribute( 'data-index-h' ), 10 );\n\n\t\t\t\tif( slide.getAttribute( 'data-index-v' ) ) {\n\t\t\t\t\tv = parseInt( slide.getAttribute( 'data-index-v' ), 10 );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t\t// Select all horizontal slides\n\t\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t\t// Assume we're not vertical\n\t\t\t\tv = undefined;\n\n\t\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\t\tif( isVertical ) {\n\t\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive(),\n\t\t\t...overlay.getState()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\n\t\t\toverlay.setState( state );\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment[data-autoslide]' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.prev();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse if( config.rtl ) {\n\t\t\t\t\tnavigateRight({skipFragments});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Scroll view navigation is handled independently\n\t\tif( scrollView.isActive() ) return scrollView.next();\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp: overlay.toggleHelp.bind( overlay ),\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the scroll view on/off\n\t\ttoggleScrollView: scrollView.toggle.bind( scrollView ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Toggles visibility of the jump-to-slide UI\n\t\ttoggleJumpToSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\t\tisVerticalStack,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisOverlayOpen: overlay.isOpen.bind( overlay ),\n\t\tisScrollView: scrollView.isActive.bind( scrollView ),\n\t\tisPrintView: printView.isActive.bind( printView ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Start/stop all media inside of the current slide\n\t\tstartEmbeddedContent: () => slideContent.startEmbeddedContent( currentSlide ),\n\t\tstopEmbeddedContent: () => slideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } ),\n\n\t\t// Lightbox previews\n\t\tpreviewIframe: overlay.previewIframe.bind( overlay ),\n\t\tpreviewImage: overlay.previewImage.bind( overlay ),\n\t\tpreviewVideo: overlay.previewVideo.bind( overlay ),\n\n\t\tshowPreview: overlay.previewIframe.bind( overlay ), // deprecated in favor of showIframeLightbox\n\t\thidePreview: overlay.close.bind( overlay ),\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\tshouldAutoAnimateBetween,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\t\tsetCurrentScrollPage,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tfocus,\n\t\tscroll: scrollView,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tkeyboard,\n\t\tfragments,\n\t\tbackgrounds,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay: overlay.close.bind( overlay ),\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n", "import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],
  "mappings": "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",
  "names": ["extend", "a", "b", "i", "queryAll", "el", "selector", "Array", "from", "querySelectorAll", "toggleClass", "className", "value", "classList", "add", "remove", "deserialize", "match", "parseFloat", "transformElement", "element", "transform", "style", "matches", "target", "matchesMethod", "matchesSelector", "msMatchesSelector", "call", "closest", "parentNode", "enterFullscreen", "requestMethod", "document", "documentElement", "requestFullscreen", "webkitRequestFullscreen", "webkitRequestFullScreen", "mozRequestFullScreen", "msRequestFullscreen", "apply", "createStyleSheet", "tag", "createElement", "type", "length", "styleSheet", "cssText", "appendChild", "createTextNode", "head", "getQueryHash", "query", "location", "search", "replace", "split", "shift", "pop", "unescape", "fileExtensionToMimeMap", "mp4", "m4a", "ogv", "mpeg", "webm", "UA", "navigator", "userAgent", "isMobile", "test", "platform", "maxTouchPoints", "isAndroid", "e", "t", "slice", "o", "l", "u", "cancelAnimationFrame", "requestAnimationFrame", "s", "filter", "dirty", "active", "c", "forEach", "styleComputed", "m", "y", "v", "p", "d", "f", "S", "availableWidth", "clientWidth", "currentWidth", "scrollWidth", "previousFontSize", "currentFontSize", "Math", "min", "max", "minSize", "maxSize", "whiteSpace", "multiLine", "n", "getComputedStyle", "getPropertyValue", "display", "preStyleTestCompleted", "fontSize", "dispatchEvent", "CustomEvent", "detail", "oldValue", "newValue", "scaleFactor", "h", "w", "observeMutations", "observer", "disconnect", "originalStyle", "z", "F", "MutationObserver", "observe", "g", "subtree", "childList", "characterData", "W", "E", "clearTimeout", "setTimeout", "x", "observeWindowDelay", "M", "Object", "defineProperty", "set", "concat", "observeWindow", "fitAll", "C", "assign", "map", "newbie", "push", "fit", "unfreeze", "freeze", "unsubscribe", "arguments", "window", "SlideContent", "constructor", "Reveal", "this", "startEmbeddedIframe", "bind", "shouldPreload", "isScrollView", "preload", "getConfig", "preloadIframes", "hasAttribute", "load", "slide", "options", "tagName", "setAttribute", "getAttribute", "removeAttribute", "media", "sources", "source", "background", "slideBackgroundElement", "backgroundContent", "slideBackgroundContentElement", "backgroundIframe", "backgroundImage", "backgroundVideo", "backgroundVideoLoop", "backgroundVideoMuted", "trim", "encodeRFC3986URI", "url", "encodeURI", "charCodeAt", "toString", "toUpperCase", "decodeURI", "join", "video", "isSpeakerNotes", "muted", "sourceElement", "getMimeTypeFromFile", "filename", "excludeIframes", "iframe", "width", "height", "maxHeight", "maxWidth", "backgroundIframeElement", "querySelector", "layout", "scopeElement", "fitty", "unload", "getSlideBackground", "formatEmbeddedContent", "_appendParamToIframeSource", "sourceAttribute", "sourceURL", "param", "getSlidesElement", "src", "indexOf", "startEmbeddedContent", "isSpeakerNotesWindow", "autoplay", "autoPlayMedia", "play", "readyState", "startEmbeddedMedia", "promise", "catch", "controls", "addEventListener", "removeEventListener", "event", "isAttachedToDOM", "isVisible", "paused", "ended", "currentTime", "contentWindow", "postMessage", "stopEmbeddedContent", "unloadIframes", "pause", "SLIDES_SELECTOR", "HORIZONTAL_SLIDES_SELECTOR", "VERTICAL_SLIDES_SELECTOR", "POST_MESSAGE_METHOD_BLACKLIST", "SlideNumber", "render", "getRevealElement", "configure", "config", "oldConfig", "slideNumberDisplay", "slideNumber", "isPrintView", "showSlideNumber", "update", "innerHTML", "getSlideNumber", "getCurrentSlide", "format", "getHorizontalSlides", "horizontalOffset", "dataset", "visibility", "getSlidePastCount", "getTotalSlides", "indices", "getIndices", "sep", "isVerticalSlide", "getHash", "formatNumber", "delimiter", "isNaN", "destroy", "JumpToSlide", "onInput", "onBlur", "onKeyDown", "jumpInput", "placeholder", "show", "indicesOnShow", "focus", "hide", "jumpTimeout", "jump", "slideNumberFormat", "getSlides", "parseInt", "getIndicesFromHash", "oneBasedIndex", "jumpAfter", "delay", "regex", "RegExp", "find", "innerText", "cancel", "confirm", "keyCode", "stopImmediatePropagation", "colorToRgb", "color", "hex3", "r", "charAt", "hex6", "rgb", "rgba", "Backgrounds", "create", "slideh", "backgroundStack", "createBackground", "slidev", "parallaxBackgroundImage", "backgroundSize", "parallaxBackgroundSize", "backgroundRepeat", "parallaxBackgroundRepeat", "backgroundPosition", "parallaxBackgroundPosition", "container", "contentElement", "sync", "data", "backgroundColor", "backgroundGradient", "backgroundTransition", "backgroundOpacity", "dataPreload", "opacity", "contrastClass", "getContrastClass", "contrastColor", "computedBackgroundStyle", "bubbleSlideContrastClassToElement", "classToBubble", "contains", "includeAll", "currentSlide", "currentBackground", "horizontalPast", "rtl", "horizontalFuture", "childNodes", "backgroundh", "backgroundv", "indexv", "previousBackground", "previousBackgroundHash", "currentBackgroundHash", "currentVideo", "previousVideo", "currentVideoParent", "backgroundChanged", "slideContent", "currentBackgroundContent", "backgroundImageURL", "updateParallax", "backgroundWidth", "backgroundHeight", "horizontalSlides", "verticalSlides", "getVerticalSlides", "horizontalOffsetMultiplier", "slideWidth", "offsetWidth", "horizontalSlideCount", "parallaxBackgroundHorizontal", "verticalOffsetMultiplier", "verticalOffset", "slideHeight", "offsetHeight", "verticalSlideCount", "parallaxBackgroundVertical", "autoAnimateCounter", "AutoAnimate", "run", "fromSlide", "toSlide", "reset", "allSlides", "toSlideIndex", "fromSlideIndex", "autoAnimateStyleSheet", "animationOptions", "getAutoAnimateOptions", "autoAnimate", "slideDirection", "fromSlideIsHidden", "css", "getAutoAnimatableElements", "elements", "autoAnimateElements", "to", "autoAnimateUnmatched", "defaultUnmatchedDuration", "duration", "defaultUnmatchedDelay", "getUnmatchedAutoAnimateElements", "unmatchedElement", "unmatchedOptions", "id", "autoAnimateTarget", "fontWeight", "sheet", "removeChild", "elementOptions", "easing", "fromProps", "getAutoAnimatableProperties", "toProps", "styles", "translate", "scale", "presentationScale", "getScale", "delta", "scaleX", "scaleY", "round", "propertyName", "toValue", "fromValue", "explicitValue", "toStyleProperties", "keys", "inheritedOptions", "autoAnimateEasing", "autoAnimateDuration", "autoAnimatedParent", "autoAnimateDelay", "direction", "properties", "bounds", "measure", "center", "getBoundingClientRect", "offsetLeft", "offsetTop", "computedStyles", "autoAnimateStyles", "property", "pairs", "autoAnimateMatcher", "getAutoAnimatePairs", "reserved", "pair", "index", "textNodes", "findAutoAnimateMatches", "node", "nodeName", "textContent", "getLocalBoundingBox", "fromScope", "toScope", "serializer", "fromMatches", "toMatches", "key", "fromElement", "primaryIndex", "secondaryIndex", "rootElement", "children", "reduce", "result", "containsAnimatedElements", "ScrollView", "activatedCallbacks", "onScroll", "activate", "stateBeforeActivation", "getState", "slideHTMLBeforeActivation", "horizontalBackgrounds", "presentationBackground", "viewportElement", "viewportStyles", "pageElements", "pageContainer", "previousSlide", "createPageElement", "isVertical", "contentContainer", "shouldAutoAnimateBetween", "page", "slideBackground", "pageBackground", "stickyContainer", "insertBefore", "horizontalSlide", "isVerticalStack", "verticalSlide", "createProgressBar", "stack", "setState", "callback", "restoreScrollPosition", "passive", "deactivate", "stateBeforeDeactivation", "removeProgressBar", "toggle", "override", "isActive", "progressBar", "progressBarInner", "progressBarPlayhead", "firstChild", "handleDocumentMouseMove", "progress", "clientY", "top", "progressBarHeight", "scrollTop", "scrollHeight", "handleDocumentMouseUp", "draggingProgressBar", "showProgressBar", "preventDefault", "syncPages", "syncScrollPosition", "slideSize", "getComputedSlideSize", "innerWidth", "innerHeight", "useCompactLayout", "scrollLayout", "viewportHeight", "compactHeight", "pageHeight", "scrollTriggerHeight", "setProperty", "scrollSnapType", "scrollSnap", "slideTriggers", "pages", "pageElement", "createPage", "slideElement", "stickyElement", "backgroundElement", "autoAnimatePages", "activatePage", "deactivatePage", "createFragmentTriggersForPage", "createAutoAnimateTriggersForPage", "totalScrollTriggerCount", "scrollTriggers", "total", "triggerStick", "scrollSnapAlign", "marginTop", "removeProperty", "scrollPadding", "totalHeight", "position", "setTriggerRanges", "scrollProgress", "syncProgressBar", "trigger", "rangeStart", "range", "scrollTriggerSegmentSize", "scrollTrigger", "fragmentGroups", "fragments", "sort", "autoAnimateElement", "autoAnimatePage", "indexh", "viewportHeightFactor", "playheadHeight", "progressBarScrollableHeight", "progressSegmentHeight", "spacing", "slideTrigger", "progressBarSlide", "scrollTriggerElements", "triggerElement", "scrollProgressMid", "activePage", "loaded", "activateTrigger", "deactivateTrigger", "setProgressBarValue", "getAllPages", "hideProgressBarTimeout", "prev", "next", "scrollToSlide", "getScrollTriggerBySlide", "storeScrollPosition", "storeScrollPositionTimeout", "sessionStorage", "setItem", "origin", "pathname", "scrollPosition", "getItem", "scrollOrigin", "setCurrentScrollPage", "backgrounds", "sibling", "getSlideByIndices", "flatMap", "getViewportElement", "PrintView", "slides", "injectPageNumbers", "pageWidth", "floor", "margin", "Promise", "body", "layoutSlideContents", "slideScrollHeights", "left", "contentHeight", "numberOfPages", "ceil", "pdfMaxPagesPerSlide", "pdfPageHeightOffset", "showNotes", "notes", "getSlideNotes", "notesSpacing", "notesLayout", "notesElement", "bottom", "numberElement", "pdfSeparateFragments", "previousFragmentStep", "fragment", "clonedPage", "cloneNode", "fragmentNumber", "view", "Fragments", "disable", "enable", "availableRoutes", "hiddenFragments", "grouped", "ordered", "unordered", "sorted", "group", "sortAll", "changedFragments", "shown", "hidden", "maxIndex", "currentFragment", "wasVisible", "announceStatus", "getStatusText", "bubbles", "goto", "offset", "lastVisibleFragment", "fragmentInURL", "writeURL", "Overview", "onSlideClicked", "overview", "cancelAutoSlide", "getBackgroundsElement", "overviewSlideWidth", "overviewSlideHeight", "updateSlidesVisibility", "hslide", "vslide", "hbackground", "vbackground", "vmin", "transformSlides", "cueAutoSlide", "Keyboard", "shortcuts", "bindings", "onDocumentKeyDown", "navigationMode", "unbind", "addKeyBinding", "binding", "description", "removeKeyBinding", "triggerKey", "registerKeyboardShortcut", "getShortcuts", "getBindings", "keyboardCondition", "isFocused", "autoSlideWasPaused", "isAutoSliding", "onUserInput", "activeElementIsCE", "activeElement", "isContentEditable", "activeElementIsInput", "activeElementIsNotes", "unusedModifier", "shiftKey", "altKey", "ctrlKey", "metaKey", "resumeKeyCodes", "keyboard", "isOverlayOpen", "includes", "isPaused", "useLinearMode", "hasHorizontalSlides", "hasVerticalSlides", "triggered", "action", "skipFragments", "right", "up", "Number", "MAX_VALUE", "down", "togglePause", "embedded", "autoSlideStoppable", "toggleAutoSlide", "jumpToSlide", "toggleJumpToSlide", "closeOverlay", "toggleHelp", "Location", "MAX_REPLACE_STATE_FREQUENCY", "writeURLTimeout", "replaceStateTimestamp", "onWindowHashChange", "hash", "name", "bits", "hashIndexBase", "hashOneBasedIndex", "getElementById", "decodeURIComponent", "error", "readURL", "currentIndices", "newIndices", "history", "debouncedReplaceState", "replaceState", "Date", "now", "replaceStateTimeout", "encodeURIComponent", "Controls", "onNavigateLeftClicked", "onNavigateRightClicked", "onNavigateUpClicked", "onNavigateDownClicked", "onNavigatePrevClicked", "onNavigateNextClicked", "onEnterFullscreen", "revealElement", "controlsLeft", "controlsRight", "controlsUp", "controlsDown", "controlsPrev", "controlsNext", "controlsFullscreen", "controlsRightArrow", "controlsLeftArrow", "controlsDownArrow", "controlsLayout", "controlsBackArrows", "pointerEvents", "eventName", "routes", "fragmentsRoutes", "hasVerticalSiblings", "parentElement", "controlsTutorial", "hasNavigatedVertically", "hasNavigatedHorizontally", "viewport", "Progress", "onProgressClicked", "bar", "getProgress", "getMaxWidth", "slidesTotal", "slideIndex", "clientX", "targetIndices", "Pointer", "lastMouseWheelStep", "cursorHidden", "cursorInactiveTimeout", "onDocumentCursorActive", "onDocumentMouseScroll", "mouseWheel", "hideInactiveCursor", "showCursor", "cursor", "hideCursor", "hideCursorTime", "wheelDelta", "loadScript", "script", "async", "defer", "onload", "onreadystatechange", "onerror", "err", "Error", "lastChild", "Plugins", "reveal", "state", "registeredPlugins", "asyncDependencies", "plugins", "dependencies", "registerPlugin", "resolve", "scripts", "scriptsToLoad", "condition", "scriptLoadedCallback", "initPlugins", "then", "console", "warn", "pluginValues", "values", "pluginsToInitialize", "loadAsync", "initNextPlugin", "afterPlugInitialized", "plugin", "init", "hasPlugin", "getPlugin", "getRegisteredPlugins", "Overlay", "onSlidesClicked", "iframeTriggerSelector", "mediaTriggerSelector", "stateProps", "previewLinks", "hasLinkPreviews", "hasMediaPreviews", "createOverlay", "dom", "previewIframe", "close", "previewMedia", "mediaType", "fitMode", "previewFit", "previewImage", "img", "previewVideo", "previewAutoplay", "previewControls", "loop", "previewLoop", "previewMuted", "playsInline", "showHelp", "help", "html", "isOpen", "every", "linkTarget", "mediaTarget", "Touch", "touchStartX", "touchStartY", "touchStartCount", "touchCaptured", "onPointerDown", "onPointerMove", "onPointerUp", "onTouchStart", "onTouchMove", "onTouchEnd", "msPointerEnabled", "isSwipePrevented", "touches", "currentX", "currentY", "includeFragments", "deltaX", "deltaY", "abs", "pointerType", "MSPOINTER_TYPE_TOUCH", "STATE_FOCUS", "STATE_BLUR", "Focus", "onRevealPointerDown", "onDocumentPointerDown", "blur", "Notes", "updateVisibility", "hasNotes", "notesElements", "Playback", "progressCheck", "diameter", "diameter2", "thickness", "playing", "progressOffset", "canvas", "context", "getContext", "setPlaying", "wasPlaying", "animate", "progressBefore", "radius", "iconSize", "endAngle", "PI", "startAngle", "save", "clearRect", "beginPath", "arc", "fillStyle", "fill", "lineWidth", "strokeStyle", "stroke", "fillRect", "moveTo", "lineTo", "restore", "on", "listener", "off", "defaultConfig", "minScale", "maxScale", "respondToHashChanges", "disableLayout", "touch", "shuffle", "showHiddenSlides", "autoSlide", "autoSlideMethod", "defaultTiming", "postMessageEvents", "focusBodyOnPageVisibilityChange", "transition", "transitionSpeed", "scrollActivationWidth", "POSITIVE_INFINITY", "viewDistance", "mobileViewDistance", "sortFragmentsOnSync", "VERSION", "Deck", "autoSlidePlayer", "initialized", "ready", "navigationHistory", "slidesTransform", "autoSlideTimeout", "autoSlideStartTime", "autoSlidePaused", "scrollView", "printView", "pointer", "overlay", "start", "Util", "wrapper", "parent", "childElementCount", "Device", "pauseOverlay", "createSingletonNode", "tagname", "classname", "nodes", "testNode", "statusElement", "overflow", "clip", "createStatusElement", "setupDOM", "onPostMessage", "setInterval", "scrollLeft", "onFullscreenChange", "activatePrintView", "activateScrollView", "removeEventListeners", "activateInitialView", "text", "nodeType", "isAriaHidden", "isDisplayHidden", "child", "isReady", "numberOfSlides", "resume", "onAutoSlidePlayerClick", "addEventListeners", "onWindowResize", "onTransitionEnd", "onPageVisibilityChange", "useCapture", "transforms", "createEvent", "initEvent", "dispatchPostMessage", "dispatchSlideChanged", "self", "message", "namespace", "JSON", "stringify", "viewportWidth", "size", "oldScale", "presentationWidth", "presentationHeight", "zoom", "len", "checkResponsiveScrollView", "remainingHeight", "getRemainingHeight", "newHeight", "oldHeight", "nw", "naturalWidth", "videoWidth", "nh", "naturalHeight", "videoHeight", "es", "setPreviousVerticalIndex", "getPreviousVerticalIndex", "attributeName", "isLastVerticalSlide", "nextElementSibling", "isFirstSlide", "isLastSlide", "wasPaused", "defaultPrevented", "stateBefore", "indexhBefore", "indexvBefore", "updateSlides", "slideChanged", "currentHorizontalSlide", "currentVerticalSlides", "autoAnimateTransition", "stateLoop", "j", "splice", "beforeSlide", "random", "slidesLength", "printMode", "loopedForwards", "loopedBackwards", "reverse", "showFragmentsIn", "hideFragmentsIn", "wasPresent", "slideState", "distanceX", "distanceY", "horizontalSlidesLength", "verticalSlidesLength", "oy", "fragmentRoutes", "pastCount", "mainLoop", "getSlide", "indexf", "fragmentAutoSlide", "parentAutoSlide", "slideAutoSlide", "playbackRate", "navigateNext", "pauseAutoSlide", "resumeAutoSlide", "navigateLeft", "undefined", "navigateRight", "navigateUp", "navigateDown", "navigatePrev", "parse", "method", "args", "anchor", "fullscreenElement", "webkitFullscreenElement", "API", "initialize", "initOptions", "setViewport", "syncSlide", "syncFragments", "navigateFragment", "prevFragment", "nextFragment", "availableFragments", "toggleOverview", "toggleScrollView", "isOverview", "loadSlide", "unloadSlide", "showPreview", "hidePreview", "pausedFlag", "overviewFlag", "totalCount", "allFragments", "fragmentWeight", "getSlidesAttributes", "attributes", "attribute", "getPreviousSlide", "getSlidePath", "getPlugins", "scroll", "enqueuedAPICalls", "deck"]
}
